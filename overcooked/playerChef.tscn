[gd_scene load_steps=7 format=3 uid="uid://bnmxv1lamjdyj"]

[ext_resource type="Script" uid="uid://njawwihyt5mv" path="res://Inventory.gd" id="1_7q55s"]
[ext_resource type="PackedScene" uid="uid://ndulmolfu8u5" path="res://Godot converted/untitled.glb" id="1_vmk5g"]
[ext_resource type="Script" uid="uid://dkkuh2tj0x18s" path="res://InteractionChecker.gd" id="2_vmk5g"]

[sub_resource type="GDScript" id="GDScript_w0ksy"]
script/source = "extends CharacterBody3D

const SPEED = 5.0
const DASH_MULTIPLIER = 2.5
const GRAVITY = 2.0
const DASH_DURATION = 0.3  # Dash lasts 0.3 seconds

var freeze: bool = false
var dashing: bool = false
var dash_timer: float = 0.0
var last_direction: Vector3 = Vector3.ZERO

@onready var inventory: Inventory = $Inventory

func _process(_delta: float) -> void:
	if Input.is_action_just_pressed(\"print_inventory\"):
		print(\"Current Inventory:\", inventory.resources_inventory)

	if Input.is_action_just_pressed(\"Dash\") and last_direction != Vector3.ZERO and not dashing:
		dashing = true
		dash_timer = DASH_DURATION

func _physics_process(delta: float) -> void:
	var input_dir = Input.get_vector(\"Left\", \"Right\", \"Forwards\", \"Backwards\")
	var move_dir = Vector3(input_dir.x, 0, input_dir.y).normalized()

	# Apply gravity
	velocity.y -= GRAVITY

	if not freeze:
		if move_dir != Vector3.ZERO:
			last_direction = move_dir  # Update direction only when there's movement

		if dashing:
			velocity.x = last_direction.x * SPEED * DASH_MULTIPLIER
			velocity.z = last_direction.z * SPEED * DASH_MULTIPLIER

			dash_timer -= delta
			if dash_timer <= 0.0:
				dashing = false  # End dash
		elif move_dir != Vector3.ZERO:
			velocity.x = move_dir.x * SPEED
			velocity.z = move_dir.z * SPEED
		else:
			velocity.x = 0
			velocity.z = 0

		# Smooth rotation toward last direction
		var target_rotation = atan2(-last_direction.x, -last_direction.z)
		rotation.y = lerp_angle(rotation.y, target_rotation, 0.2)

	move_and_slide()

func Freeze():
	freeze = not freeze
	print(\"freeze\" if freeze else \"unfreeze\")
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_f4xx0"]

[sub_resource type="BoxShape3D" id="BoxShape3D_5s4uc"]
size = Vector3(1, 1, 0.688843)

[node name="Player" type="CharacterBody3D"]
safe_margin = 0.08
script = SubResource("GDScript_w0ksy")

[node name="ChefMesh" parent="." instance=ExtResource("1_vmk5g")]
transform = Transform3D(-1.88033, 0, 0.0719062, 0, 1.8817, 0, -0.0719062, 0, -1.88033, 0, -1.34282, 0)

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_f4xx0")

[node name="Inventory" type="Node3D" parent="."]
script = ExtResource("1_7q55s")

[node name="InteractionCheckerArea3D" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.5, -0.6)
script = ExtResource("2_vmk5g")

[node name="CollisionShape3D" type="CollisionShape3D" parent="InteractionCheckerArea3D"]
transform = Transform3D(1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0.5, -0.336)
shape = SubResource("BoxShape3D_5s4uc")

[node name="Timer" type="Timer" parent="InteractionCheckerArea3D"]
autostart = true

[connection signal="timeout" from="InteractionCheckerArea3D/Timer" to="InteractionCheckerArea3D" method="_on_timer_timeout"]
