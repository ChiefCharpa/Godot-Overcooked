[gd_scene load_steps=8 format=3 uid="uid://bnmxv1lamjdyj"]

[ext_resource type="Script" uid="uid://njawwihyt5mv" path="res://Inventory.gd" id="1_7q55s"]
[ext_resource type="PackedScene" uid="uid://c67vmj3s6nei8" path="res://Overcooked Assets/Chef/ChefAnim/chefRigged.gltf" id="1_vmk5g"]
[ext_resource type="Script" uid="uid://dkkuh2tj0x18s" path="res://InteractionChecker.gd" id="2_vmk5g"]

[sub_resource type="GDScript" id="GDScript_w0ksy"]
script/source = "extends CharacterBody3D

const SPEED = 5.0
const DASH_MULTIPLIER = 2.5
const GRAVITY = 2.0
const DASH_DURATION = 0.3  # Dash lasts 0.3 seconds

var freeze: bool = false
var dashing: bool = false
var dash_timer: float = 0.0
var last_direction: Vector3 = Vector3.ZERO

@onready var inventory: Inventory = $Inventory

func _process(_delta: float) -> void:
	if is_multiplayer_authority():
		if Input.is_action_just_pressed(\"print_inventory\"):
			print(\"Current Inventory:\", inventory.resources_inventory)

		if Input.is_action_just_pressed(\"Dash\") and last_direction != Vector3.ZERO and not dashing:
			dashing = true
			dash_timer = DASH_DURATION

func _physics_process(delta: float) -> void:
	if is_multiplayer_authority():
		var input_dir = Input.get_vector(\"Left\", \"Right\", \"Forwards\", \"Backwards\")
		var move_dir = Vector3(input_dir.x, 0, input_dir.y).normalized()

		# Apply gravity
		velocity.y -= GRAVITY

		if not freeze:
			if move_dir != Vector3.ZERO:
				last_direction = move_dir  # Update direction only when there's movement

			if dashing:
				velocity.x = last_direction.x * SPEED * DASH_MULTIPLIER
				velocity.z = last_direction.z * SPEED * DASH_MULTIPLIER

				dash_timer -= delta
				if dash_timer <= 0.0:
					dashing = false  # End dash
			elif move_dir != Vector3.ZERO:
				velocity.x = move_dir.x * SPEED
				velocity.z = move_dir.z * SPEED
			else:
				velocity.x = 0
				velocity.z = 0

			# Smooth rotation toward last direction
			var target_rotation = atan2(-last_direction.x, -last_direction.z)
			rotation.y = lerp_angle(rotation.y, target_rotation, 0.2)

	move_and_slide()

func Freeze():
	freeze = not freeze
	print(\"freeze\" if freeze else \"unfreeze\")
	
func _enter_tree():
	set_multiplayer_authority(name.to_int())
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_f4xx0"]

[sub_resource type="BoxShape3D" id="BoxShape3D_5s4uc"]
size = Vector3(1, 1, 0.688843)

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_vmk5g"]
properties/0/path = NodePath(".:position")
properties/0/spawn = true
properties/0/replication_mode = 1
properties/1/path = NodePath(".:rotation")
properties/1/spawn = true
properties/1/replication_mode = 1

[node name="Player" type="CharacterBody3D"]
safe_margin = 0.08
script = SubResource("GDScript_w0ksy")

[node name="chefRigged" parent="." instance=ExtResource("1_vmk5g")]
transform = Transform3D(-1.56531, 0, 0.0141929, 0, 1.51143, 0, -0.014398, 0, -1.54302, 0, -1.22458, 0)

[node name="Skeleton3D" parent="chefRigged/Armature" index="0"]
bones/4/rotation = Quaternion(0.150556, -0.181008, -0.87691, 0.419044)
bones/5/rotation = Quaternion(0.00165592, -0.0550218, -0.00298264, 0.998479)
bones/6/rotation = Quaternion(0.753097, -0.0153978, -0.0832298, 0.652442)
bones/7/rotation = Quaternion(0.111438, 0.179759, 0.870789, 0.443841)
bones/8/rotation = Quaternion(0.00343389, -0.0178398, 0.0020712, 0.999833)
bones/9/rotation = Quaternion(0.807575, -0.113802, 0.00851562, 0.578618)

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_f4xx0")

[node name="Inventory" type="Node3D" parent="."]
script = ExtResource("1_7q55s")

[node name="InteractionCheckerArea3D" type="Area3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.5, -0.6)
script = ExtResource("2_vmk5g")

[node name="CollisionShape3D" type="CollisionShape3D" parent="InteractionCheckerArea3D"]
transform = Transform3D(1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0.5, -0.336)
shape = SubResource("BoxShape3D_5s4uc")

[node name="Timer" type="Timer" parent="InteractionCheckerArea3D"]
autostart = true

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="."]
replication_config = SubResource("SceneReplicationConfig_vmk5g")

[connection signal="timeout" from="InteractionCheckerArea3D/Timer" to="InteractionCheckerArea3D" method="_on_timer_timeout"]

[editable path="chefRigged"]
